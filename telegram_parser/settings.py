"""
Django settings for telegram_parser project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'front_end/static/'

STATICFILES_DIRS = (
	os.path.join(BASE_DIR, STATIC_URL),
)

# PROJECT_PATH = os.path.realpath(os.path.join(os.path.dirname(__file__), '..'))
# SETTINGS_PATHS = [os.path.dirname(__file__), ]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(-0&p-5i9#8xd=3_lk9gfx58x1pjg(d*z@y9&+iq1q_e-%9l5&'

# # SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'telegram.apps.TelegramConfig',
	'configuration.apps.ConfigurationConfig',
	'celery_django.apps.CeleryDjangoConfig',
	'front_end.apps.FrontEndConfig',
	'bootstrap5',
	'django_bootstrap_icons'
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'telegram_parser.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'telegram_parser.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.sqlite3',
		'NAME': BASE_DIR / 'db.sqlite3',
	}
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Minsk'

USE_I18N = True

USE_TZ = True

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# https://docs.djangoproject.com/en/4.1/topics/logging/

LOGGING = {
	'version': 1,
	'disable_existing_loggers': True,
	'formatters': {
		'verbose': {
			'format': '{levelname} |{asctime}| {module} | {process:d} {thread:d} | {message}',
			'style': '{',
		},
		'simple': {
			'format': '{levelname} |{asctime}| {module} | {message}',
			'style': '{',
		},
	},
	'handlers': {
		'console': {
			'class': 'logging.StreamHandler',
			'formatter': 'simple',
		},
		'file': {
			'level': 'WARNING',
			'class': 'logging.handlers.TimedRotatingFileHandler',
			'filename': 'logs/server.log',
			'when': 'D',  # this specifies the interval
			'interval': 1,  # defaults to 1, only necessary for other values
			'backupCount': 10,  # how many backup file to keep, 10 days
			'formatter': 'verbose',
		},
		'celery_file': {
			'level': 'WARNING',
			'class': 'logging.handlers.TimedRotatingFileHandler',
			'filename': 'logs/celery.log',
			'when': 'D',
			'interval': 1,
			'backupCount': 10,
			'formatter': 'verbose',
		},
	},
	'loggers': {
		'django': {
			'handlers': ['file', 'console'],
			'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
			'propagate': False,
		},
		'custom': {
			'handlers': ['console', 'file', 'celery_file'],
			'level': 'DEBUG',
			'propagate': False,
		},
		'celery': {
			'handlers': ['celery_file', 'console'],
			'level': 'DEBUG',
			'propagate': False,
		},
	},
	'root': {
		'handlers': ['console'],
		'level': 'ERROR',
		'propagate': False,
	}
}
